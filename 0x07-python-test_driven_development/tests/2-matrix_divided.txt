The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
----------------------------

First import ``matrix_divided`` from the module:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test normal matrix:

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test one element in the matrix:

	>>> matrix_divided([[6.0]], 3)
	[[2.0]]


----------------------------
FAIL CASES:

Test empty matrix:

	>>> matrix_divided(None, 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = []
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test different sized lists in matrix:

	>>> matrix = [[2, 4, 6], [8]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Test matrix with other data types:

	>>> matrix = [["Holberton"], ["School"]]
	>>> matrix_divided(matrix, 4)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test div by 0:

	>>> matrix = [[1, 2], [3, 4]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

Test div must be a number:

	>>> matrix = [[1, 2], [3, 4]]
	>>> matrix_divided(matrix, "5")
	Traceback (most recent call last):
	...
	TypeError: div must be a number
