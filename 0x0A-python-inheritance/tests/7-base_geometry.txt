==============================
The ``7-base_geometry`` module
==============================

Using ''BaseGeometry''
----------------------------

First import ''BaseGeometry'' from the module:

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


>>> bg = BaseGeometry()

>>> type(bg)
<class '7-base_geometry.BaseGeometry'>

>>> type(BaseGeometry())
<class '7-base_geometry.BaseGeometry'>

>>> bg.integer_validator("test", 12)

>>> bg.integer_validator("prueba", "test")
Traceback (most recent call last):
...
TypeError: prueba must be an integer

>>> bg.integer_validator("test", 0)
Traceback (most recent call last):
...
ValueError: test must be greater than 0

>>> bg.integer_validator("prueba", -4)
Traceback (most recent call last):
...
ValueError: prueba must be greater than 0

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

Other cases
-----------

>>> bg.integer_validator()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("name")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("name", 12, 15)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() takes 3 positional arguments but 4 were given

Other cases on 2nd argument
---------------------------

>>> bg.integer_validator("test", 1.4)
Traceback (most recent call last):
...
TypeError: test must be an integer

>>> bg.integer_validator("prueba", True)
Traceback (most recent call last):
...
TypeError: prueba must be an integer

>>> bg.integer_validator("test", None)
Traceback (most recent call last):
...
TypeError: test must be an integer

>>> bg.integer_validator("prueba", [])
Traceback (most recent call last):
...
TypeError: prueba must be an integer

>>> bg.integer_validator("test", [1])
Traceback (most recent call last):
...
TypeError: test must be an integer

>>> bg.integer_validator("prueba", ())
Traceback (most recent call last):
...
TypeError: prueba must be an integer

>>> bg.integer_validator("test", (1))

>>> bg.integer_validator("prueba", {})
Traceback (most recent call last):
...
TypeError: prueba must be an integer

>>> bg.integer_validator("test", {"a": 1})
Traceback (most recent call last):
...
TypeError: test must be an integer

>>> bg.integer_validator("prueba", {3, 4})
Traceback (most recent call last):
...
TypeError: prueba must be an integer

>>> bg.integer_validator("test", "")
Traceback (most recent call last):
...
TypeError: test must be an integer

>>> bg.integer_validator("prueba", bg)
Traceback (most recent call last):
...
TypeError: prueba must be an integer

>>> bg.integer_validator("test", dir())
Traceback (most recent call last):
...
TypeError: test must be an integer

>>> bg.integer_validator("prueba", BaseGeometry())
Traceback (most recent call last):
...
TypeError: prueba must be an integer

>>> bg.integer_validator("test", BaseGeometry)
Traceback (most recent call last):
...
TypeError: test must be an integer
